{"version":3,"sources":["components/Location.js","img/sun.svg","img/cloud.svg","img/sun_cloud.svg","img/rain.svg","img/sun_rain.svg","img/thunder.svg","components/CurrentWeather.js","components/CityItem.js","components/Mask.js","components/Forecast.js","App.js","reportWebVitals.js","index.js"],"names":["Location","props","location","setShowMask","setLocation","className","onClick","icon","faMapMarkerAlt","CurrentWeather","weather","setWeather","showMask","useState","currentWeatherImg","setCurrentWeatherImg","getCurrentPositionData","fetch","then","r","json","data","dataReceived","records","locations","locationName","description","weatherElement","time","elementValue","value","averageTemperature","rainPossibility","maxTemperature","minTemperature","img","date","startTime","slice","useEffect","sun","sun_cloud","cloud","src","CityItem","cityName","e","Mask","showCities","map","item","stopPropagation","Forecast","dayCount","forecastImg","setForecastImg","forecast","setForecast","getForecastData","dataProcessed","index","filter","console","log","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.448b302f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./components.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Location(props) {\r\n  const { location, setLocation, setShowMask } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"location_wrapper\">\r\n        <div className=\"city_name\">{location}</div>\r\n\r\n        <div\r\n          className=\"location_icon\"\r\n          onClick={() => {\r\n            setShowMask(1);\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Location;\r\n","export default __webpack_public_path__ + \"static/media/sun.63eb6ccc.svg\";","export default __webpack_public_path__ + \"static/media/cloud.5c664809.svg\";","export default __webpack_public_path__ + \"static/media/sun_cloud.415ec846.svg\";","export default __webpack_public_path__ + \"static/media/rain.1fb3e4d2.svg\";","export default __webpack_public_path__ + \"static/media/sun_rain.f50d0d50.svg\";","export default __webpack_public_path__ + \"static/media/thunder.d9315f71.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./components.scss\";\r\nimport Location from \"./Location\";\r\n\r\n// import { ReactComponent as Sun } from \"./../img/sun.svg\";\r\nimport sun from \"./../img/sun.svg\";\r\nimport cloud from \"./../img/cloud.svg\";\r\nimport rain from \"./../img/rain.svg\";\r\nimport sun_cloud from \"./../img/sun_cloud.svg\";\r\nimport sun_rain from \"./../img/sun_rain.svg\";\r\nimport thunder from \"./../img/thunder.svg\";\r\n\r\nfunction CurrentWeather(props) {\r\n  const {\r\n    weather,\r\n    setWeather,\r\n    location,\r\n    setLocation,\r\n    showMask,\r\n    setShowMask,\r\n  } = props;\r\n  const [currentWeatherImg, setCurrentWeatherImg] = useState();\r\n\r\n  const getCurrentPositionData = () => {\r\n    fetch(\r\n      \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-091?Authorization=CWB-BB6158E8-3E79-4C4D-BAFF-D0980161A2C5&locationName=\" +\r\n        location\r\n    )\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        const dataReceived = data.records.locations[0].location[0];\r\n\r\n        setWeather({\r\n          locationName: location,\r\n          description:\r\n            dataReceived.weatherElement[6].time[0].elementValue[0].value,\r\n          averageTemperature:\r\n            dataReceived.weatherElement[1].time[0].elementValue[0].value,\r\n          rainPossibility:\r\n            dataReceived.weatherElement[0].time[0].elementValue[0].value,\r\n          maxTemperature:\r\n            dataReceived.weatherElement[12].time[0].elementValue[0].value,\r\n          minTemperature:\r\n            dataReceived.weatherElement[8].time[0].elementValue[0].value,\r\n          img: dataReceived.weatherElement[6].time[0].elementValue[1].value,\r\n          date: dataReceived.weatherElement[0].time[0].startTime.slice(0, 10),\r\n        });\r\n      });\r\n  };\r\n\r\n  // 判斷用甚麼天氣圖示\r\n  const decideImg = () => {\r\n    if (weather.img === \"01\") {\r\n      setCurrentWeatherImg(sun);\r\n    } else if (weather.img === \"02\") {\r\n      setCurrentWeatherImg(sun_cloud);\r\n    } else if (\r\n      weather.img === \"03\" ||\r\n      \"04\" ||\r\n      \"05\" ||\r\n      \"06\" ||\r\n      \"07\" ||\r\n      \"24\" ||\r\n      \"25\" ||\r\n      \"26\" ||\r\n      \"27\" ||\r\n      \"28\"\r\n    ) {\r\n      setCurrentWeatherImg(cloud);\r\n    } else if (\r\n      weather.img === \"08\" ||\r\n      \"09\" ||\r\n      \"10\" ||\r\n      \"11\" ||\r\n      \"12\" ||\r\n      \"13\" ||\r\n      \"14\" ||\r\n      \"19\" ||\r\n      \"20\" ||\r\n      \"29\" ||\r\n      \"30\" ||\r\n      \"31\" ||\r\n      \"32\" ||\r\n      \"38\" ||\r\n      \"39\"\r\n    ) {\r\n      setCurrentWeatherImg(rain);\r\n    } else if (\r\n      weather.img === \"15\" ||\r\n      \"16\" ||\r\n      \"17\" ||\r\n      \"18\" ||\r\n      \"21\" ||\r\n      \"22\" ||\r\n      \"33\" ||\r\n      \"34\" ||\r\n      \"35\" ||\r\n      \"36\" ||\r\n      \"41\"\r\n    ) {\r\n      setCurrentWeatherImg(thunder);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentPositionData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    decideImg();\r\n  }, [weather]);\r\n\r\n  useEffect(() => {\r\n    getCurrentPositionData();\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <Location\r\n        location={location}\r\n        setLocation={setLocation}\r\n        setShowMask={setShowMask}\r\n      />\r\n      <div className=\"description\">\r\n        {weather.date} &nbsp;&nbsp;\r\n        {weather.description}\r\n      </div>\r\n      <img className=\"currnt_weather_img\" src={currentWeatherImg}></img>\r\n\r\n      <div className=\"temp_n_detail_wrapper\">\r\n        <div className=\"temperature\">{weather.averageTemperature}°C</div>\r\n\r\n        <div className=\"detail\">\r\n          <div>\r\n            <span>降雨機率:</span>\r\n            <span>&nbsp;&nbsp;&nbsp; {weather.rainPossibility} %</span>\r\n          </div>\r\n          <div>\r\n            <span>最低溫度:</span>\r\n            <span>&nbsp;&nbsp;&nbsp; {weather.minTemperature}°C</span>\r\n          </div>\r\n          <div>\r\n            <span>最高溫度:</span>\r\n            <span>&nbsp;&nbsp;&nbsp; {weather.maxTemperature}°C</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction CityItem(props) {\r\n  const { cityName, setLocation, setShowMask } = props;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"city_item\"\r\n        onClick={(e) => {\r\n          setShowMask(0);\r\n          setLocation(cityName);\r\n        }}\r\n      >\r\n        {cityName}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CityItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CityItem from \"./CityItem\";\r\n\r\nfunction Mask(props) {\r\n  const { showMask, setShowMask, setLocation } = props;\r\n\r\n  const cityList = [\r\n    \"基隆市\",\r\n    \"臺北市\",\r\n    \"新北市\",\r\n    \"桃園市\",\r\n    \"新竹市\",\r\n    \"苗栗縣\",\r\n    \"臺中市\",\r\n    \"彰化縣\",\r\n    \"南投縣\",\r\n    \"雲林縣\",\r\n    \"嘉義市\",\r\n    \"嘉義縣\",\r\n    \"臺南市\",\r\n    \"高雄市\",\r\n    \"屏東縣\",\r\n    \"臺東縣\",\r\n    \"花蓮縣\",\r\n    \"宜蘭縣\",\r\n    \"澎湖縣\",\r\n    \"金門縣\",\r\n    \"連江縣\",\r\n  ];\r\n\r\n  const showCities = cityList.map(function (item) {\r\n    return (\r\n      <CityItem\r\n        cityName={item}\r\n        setLocation={setLocation}\r\n        setShowMask={setShowMask}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"mask_background\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          setShowMask(0);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"city_list_card\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n          }}\r\n        >\r\n          {showCities}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Mask;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport sun from \"./../img/sun.svg\";\r\nimport cloud from \"./../img/cloud.svg\";\r\nimport rain from \"./../img/rain.svg\";\r\nimport sun_cloud from \"./../img/sun_cloud.svg\";\r\nimport sun_rain from \"./../img/sun_rain.svg\";\r\nimport thunder from \"./../img/thunder.svg\";\r\nimport { faRing } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Forecast(props) {\r\n  const { location, dayCount } = props;\r\n  const [forecastImg, setForecastImg] = useState(sun);\r\n\r\n  const [forecast, setForecast] = useState({\r\n    date: \"\",\r\n    img: \"\",\r\n    maxTemperature: \"\",\r\n    minTemperature: \"\",\r\n  });\r\n\r\n  const getForecastData = () => {\r\n    fetch(\r\n      \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-091?Authorization=CWB-BB6158E8-3E79-4C4D-BAFF-D0980161A2C5&locationName=\" +\r\n        location\r\n    )\r\n      .then((r) => r.json())\r\n      .then((data) => {\r\n        // const dataReceived = data.records.locations[0].location[0];\r\n        const test = data.records.locations[0].location[0].weatherElement;\r\n\r\n        // 這邊item是weatherElement[]裡的{}\r\n        const dataProcessed = test.map(function (item, index) {\r\n          // 這邊item是weatherElement[]裡的{}的time[]裡的{}\r\n          return item.time.filter(function (item, index) {\r\n            return item.startTime.slice(11, 16) === \"06:00\";\r\n          });\r\n        });\r\n        console.log(dataProcessed);\r\n\r\n        setForecast({\r\n          maxTemperature: dataProcessed[12][dayCount].elementValue[0].value,\r\n          minTemperature: dataProcessed[8][dayCount].elementValue[0].value,\r\n          img: dataProcessed[6][dayCount].elementValue[1].value,\r\n          date: dataProcessed[0][dayCount].startTime.slice(6, 10),\r\n        });\r\n      });\r\n  };\r\n\r\n  // 判斷用甚麼天氣圖示\r\n  const decideImg = () => {\r\n    if (forecast.img === \"01\") {\r\n      setForecastImg(sun);\r\n    } else if (forecast.img === \"02\") {\r\n      setForecastImg(sun_cloud);\r\n    } else if (\r\n      forecast.img === \"03\" ||\r\n      \"04\" ||\r\n      \"05\" ||\r\n      \"06\" ||\r\n      \"07\" ||\r\n      \"24\" ||\r\n      \"25\" ||\r\n      \"26\" ||\r\n      \"27\" ||\r\n      \"28\"\r\n    ) {\r\n      setForecastImg(cloud);\r\n    } else if (\r\n      forecast.img === \"08\" ||\r\n      \"09\" ||\r\n      \"10\" ||\r\n      \"11\" ||\r\n      \"12\" ||\r\n      \"13\" ||\r\n      \"14\" ||\r\n      \"19\" ||\r\n      \"20\" ||\r\n      \"29\" ||\r\n      \"30\" ||\r\n      \"31\" ||\r\n      \"32\" ||\r\n      \"38\" ||\r\n      \"39\"\r\n    ) {\r\n      setForecastImg(rain);\r\n    } else if (\r\n      forecast.img === \"15\" ||\r\n      \"16\" ||\r\n      \"17\" ||\r\n      \"18\" ||\r\n      \"21\" ||\r\n      \"22\" ||\r\n      \"33\" ||\r\n      \"34\" ||\r\n      \"35\" ||\r\n      \"36\" ||\r\n      \"41\"\r\n    ) {\r\n      setForecastImg(thunder);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getForecastData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getForecastData();\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    decideImg();\r\n  }, [forecast]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"forcast_box\">\r\n        <div className=\"forecast_date\">{forecast.date}</div>\r\n\r\n        <img className=\"farecast_img\" src={forecastImg}></img>\r\n        <div className=\"temp_range\">\r\n          {forecast.minTemperature}~{forecast.maxTemperature} °C\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Forecast;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport Mask from \"./components/Mask\";\nimport Forecast from \"./components/Forecast\";\n\nfunction App() {\n  const [location, setLocation] = useState(\"新北市\");\n  const [showMask, setShowMask] = useState(0); // 0不顯示, 1顯示\n  const [weather, setWeather] = useState({\n    locationName: location,\n    description: \"\",\n    averageTemperature: \"\",\n    rainPossibility: \"\",\n    maxTemperature: \"\",\n    minTemperature: \"\",\n    img: \"\",\n    date: \"\",\n  });\n\n\n  return (\n    <>\n      <div className=\"body\">\n        <div className=\"card\">\n          <div className=\"current_weather\">\n            <CurrentWeather\n              weather={weather}\n              setWeather={setWeather}\n              location={location}\n              setLocation={setLocation}\n              showMask={showMask}\n              setShowMask={setShowMask}\n            />\n          </div>\n\n          <div className=\"seperattion_line\"></div>\n\n          <div className=\"forecasts\">\n            <Forecast\n              location={location}\n              dayCount={0}\n            />\n\n            <Forecast\n              location={location}\n              dayCount={1}\n            />\n\n            <Forecast\n              location={location}\n              dayCount={2}\n            />\n          </div>\n        </div>\n\n        {showMask == 0 ? (\n          <div></div>\n        ) : (\n          <Mask\n            showMask={showMask}\n            setShowMask={setShowMask}\n            setLocation={setLocation}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}